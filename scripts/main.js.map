{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/settings.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/module.ts","webpack:///./src/thirds/mtb.ts","webpack:///../../../../foundryVTT-projects/@utils/anonymous/pf2e.ts","webpack:///../../../../foundryVTT-projects/@utils/anonymous/third.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///./src/thirds/pf2e.ts","webpack:///./src/combat.ts","webpack:///./src/apps/tracker.ts","webpack:///../../../../foundryVTT-projects/@utils/math.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/combatant.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///./src/token.ts","webpack:///./src/main.ts","webpack:///./src/tracker.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export let MODULE_ID = ''\r\nexport let TYPE = 'module'\r\n\r\nexport function setModuleID(id: string, isSystem = false) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n    TYPE = isSystem ? 'system' : 'module'\r\n}\r\n","import { MODULE_ID, TYPE } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `${TYPE}s/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `${TYPE}s/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { getSettingLocalizationPath } from '@utils/foundry/path'\r\n\r\nexport function getSetting<T extends any>(key: string) {\r\n    return game.settings.get(MODULE_ID, key) as T\r\n}\r\n\r\nexport function setSetting(key: string, value: unknown) {\r\n    return game.settings.set(MODULE_ID, key, value)\r\n}\r\n\r\n/**\r\n * options.scope = 'world'\r\n *\r\n * options.config = false\r\n */\r\nexport function registerSetting<\r\n    TType extends number | string | boolean | object | Function,\r\n    TChoices extends Record<string, unknown> | undefined\r\n>(options: Omit<SettingRegistration<TType, TChoices>, 'choices'> & { choices?: string[] | Record<string, unknown> }) {\r\n    const name = options.name\r\n    options.scope = options.scope ?? 'world'\r\n    options.config = options.config ?? false\r\n    if (options.config) {\r\n        options.name = getSettingLocalizationPath(name, 'name')\r\n        options.hint = getSettingLocalizationPath(name, 'hint')\r\n    }\r\n    if (Array.isArray(options.choices)) {\r\n        options.choices = options.choices.reduce((choices, choice) => {\r\n            choices[choice] = getSettingLocalizationPath(name, 'choices', choice)\r\n            return choices\r\n        }, {} as Record<string, unknown>)\r\n    }\r\n    game.settings.register<TType, TChoices>(MODULE_ID, name, options as SettingRegistration<TType, TChoices>)\r\n}\r\n\r\n/**\r\n * options.restricted = true\r\n *\r\n * options.icon = 'fas fa-cogs'\r\n */\r\nexport function registerSettingMenu(\r\n    options: RequiredBy<Partial<Omit<SettingSubmenuConfig, 'type'>>, 'name'> & { type: ConstructorOf<FormApplication> }\r\n) {\r\n    const name = options.name\r\n    options.name = getSettingLocalizationPath('menus', name, 'name')\r\n    options.label = getSettingLocalizationPath('menus', name, 'label')\r\n    options.hint = getSettingLocalizationPath('menus', name, 'hint')\r\n    options.restricted = options.restricted ?? true\r\n    options.icon = options.icon ?? 'fas fa-cogs'\r\n    game.settings.registerMenu(MODULE_ID, name, options as SettingSubmenuConfig)\r\n}\r\n\r\nexport function getCombatTrackerConfig() {\r\n    return game.settings.get('core', 'combatTrackerConfig') as { resource: string; skipDefeated: boolean }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\ntype OwnModule = 'anonymous' | 'idleuh' | 'pf2e-hero-actions'\r\n\r\ntype ReturnedModule<T extends Record<string, any> | unknown = unknown> = Module<T> | undefined\r\ntype ReturnedModuleApi<T extends Record<string, any>> = Module<T>['api'] | undefined\r\n\r\nexport function getModule<T extends Record<string, any> | unknown = unknown>(id: string | OwnModule) {\r\n    return game.modules.get(id) as ReturnedModule<T>\r\n}\r\n\r\nexport function getCurrentModule<T extends Record<string, any> | unknown = unknown>() {\r\n    return getModule(MODULE_ID) as Module<T>\r\n}\r\n\r\nexport function getModuleApi<T extends Record<string, any>>(id: string | OwnModule) {\r\n    return getModule<T>(id)?.api as ReturnedModuleApi<T>\r\n}\r\n","import { getModule } from '@utils/foundry/module'\r\n\r\nconst MODULE_ID = 'monks-tokenbar'\r\n\r\nexport function hasMTB() {\r\n    return getModule(MODULE_ID)?.active\r\n}\r\n\r\nexport function cloneIcons(list: JQuery) {\r\n    const ol = ui.combat.element.find<HTMLOListElement>('#combat-tracker')\r\n    const combatants = ol.find<HTMLLIElement>('.combatant:has([data-control=\"toggleMovement\"])')\r\n\r\n    combatants.each(function () {\r\n        const li = $(this)\r\n        const id = li.attr('data-combatant-id')!\r\n        const icon = li.find<HTMLAnchorElement>('[data-control=\"toggleMovement\"]')\r\n        const clone = icon.clone(true)\r\n\r\n        clone.on('click', () => icon.toggleClass('active'))\r\n        icon.on('click', () => clone.toggleClass('active'))\r\n\r\n        list.find(`[data-combatant-id=\"${id}\"] [data-control=\"toggleDefeated\"]`).before(clone)\r\n    })\r\n}\r\n\r\nexport function showOnTrackerMTB() {\r\n    return hasMTB() && !!game.settings.get(MODULE_ID, 'show-on-tracker')\r\n}\r\n","export function tokenSetsNameVisibility() {\r\n    if (game.system.id !== 'pf2e') return false\r\n    if (game.settings.settings.has('pf2e.metagame.tokenSetsNameVisibility'))\r\n        return !!game.settings.get('pf2e', 'metagame.tokenSetsNameVisibility')\r\n    return !!game.settings.get('pf2e', 'metagame_tokenSetsNameVisibility')\r\n}\r\n","import { getModuleApi } from '@utils/foundry/module'\r\nimport { tokenSetsNameVisibility } from '@utils/anonymous/pf2e'\r\n\r\nexport let thirdPartyCanNamesBeHidden: () => boolean\r\nexport let thirdPartyPlayersSeeName: ((combatant: Combatant) => boolean) | undefined\r\nexport let thirdPartyToggleSeeName: ((combatant: Combatant) => Promise<unknown>) | undefined\r\nexport let thirdPartyGetName: ((combatant: Combatant) => string) | undefined\r\n\r\nexport function thirdPartyInitialization() {\r\n    const anonymous = getModuleApi('anonymous')\r\n    if (anonymous) {\r\n        thirdPartyCanNamesBeHidden = () => true\r\n        thirdPartyPlayersSeeName = anonymous.playersSeeName\r\n        thirdPartyToggleSeeName = anonymous.toggleSeeName\r\n        thirdPartyGetName = anonymous.getName\r\n    } else if (game.system.id === 'pf2e') {\r\n        thirdPartyCanNamesBeHidden = tokenSetsNameVisibility\r\n        thirdPartyPlayersSeeName = combatant => (combatant as CombatantPF2e).playersCanSeeName\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number | boolean>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function localizeTemplate(key: string, { hash }: { hash: Record<string, string> }) {\r\n    return localize(`${key}`, hash)\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        path: {\r\n            value: (key: string) => localizePath(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        template: {\r\n            value: (key: string, { hash }: { hash: Record<string, string> }) => fn(key, hash),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n        path: (key: string) => string\r\n        template: (key: string, options: { hash: Record<string, string> }) => string\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: FoundryDocument) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function flagPath(key: string) {\r\n    return `flags.${MODULE_ID}.key`\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: FoundryDocument, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId(doc: ClientDocumentMixin) {\r\n    return doc.getFlag<ItemUUID>('core', 'sourceId')\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocumentMixin, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocumentMixin, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","const SYSTEM_ID = 'pf2e'\r\n\r\nexport function isPF2eSystem() {\r\n    return game.system.id === SYSTEM_ID\r\n}\r\n\r\nexport function getPF2eDispositionColor(combatant: Combatant) {\r\n    const actor = combatant.actor as (Actor & { alliance: 'party' | 'opposition' | null }) | null\r\n    if (!actor) return CONFIG.Canvas.dispositionColors.NEUTRAL\r\n\r\n    const alliance = actor.alliance\r\n\r\n    if (alliance === 'party')\r\n        return actor.hasPlayerOwner ? CONFIG.Canvas.dispositionColors.PARTY : CONFIG.Canvas.dispositionColors.FRIENDLY\r\n\r\n    return alliance === 'opposition' ? CONFIG.Canvas.dispositionColors.HOSTILE : CONFIG.Canvas.dispositionColors.NEUTRAL\r\n}\r\n","import {\r\n    thirdPartyCanNamesBeHidden,\r\n    thirdPartyGetName,\r\n    thirdPartyPlayersSeeName,\r\n    thirdPartyToggleSeeName,\r\n} from '@utils/anonymous/third'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { getFlag, setFlag } from '@utils/foundry/flags'\r\nimport { getPF2eDispositionColor, isPF2eSystem } from './thirds/pf2e'\r\n\r\nexport function canNamesBeHidden() {\r\n    return thirdPartyCanNamesBeHidden?.() ?? false\r\n}\r\n\r\nexport function playersSeeName(combatant: Combatant) {\r\n    return combatant.actor?.hasPlayerOwner || (thirdPartyPlayersSeeName?.(combatant) ?? true)\r\n}\r\n\r\nexport function togglePlayersSeeName(combatant: Combatant) {\r\n    return thirdPartyToggleSeeName?.(combatant)\r\n}\r\n\r\nexport function getName(combatant: Combatant) {\r\n    return thirdPartyGetName?.(combatant) ?? localize('unknown')\r\n}\r\n\r\nexport function toggleFreed(combatant: Combatant) {\r\n    const immobilized = getFlag<boolean>(combatant, 'freed')\r\n    setFlag(combatant, 'freed', !immobilized)\r\n}\r\n\r\nfunction getCombatantDispositionColor(combatant: Combatant) {\r\n    if (isPF2eSystem()) return getPF2eDispositionColor(combatant)\r\n\r\n    const actor = combatant.actor\r\n    const token = combatant.token\r\n    if (!actor || !token) return CONFIG.Canvas.dispositionColors.NEUTRAL\r\n\r\n    if (actor.hasPlayerOwner) return CONFIG.Canvas.dispositionColors.PARTY\r\n\r\n    const disposition = token.disposition\r\n    if (disposition === CONST.TOKEN_DISPOSITIONS.FRIENDLY) return CONFIG.Canvas.dispositionColors.FRIENDLY\r\n    if (disposition === CONST.TOKEN_DISPOSITIONS.HOSTILE) return CONFIG.Canvas.dispositionColors.HOSTILE\r\n    return CONFIG.Canvas.dispositionColors.NEUTRAL\r\n}\r\n\r\nexport function getCombatantColor(combatant: Combatant) {\r\n    const dispositionColor = getCombatantDispositionColor(combatant)\r\n    return new Color(dispositionColor)\r\n}\r\n","import { getCombatTrackerConfig, getSetting, setSetting } from '@utils/foundry/settings'\r\nimport { flagsUpdatePath, templatePath } from '@utils/foundry/path'\r\nimport { cloneIcons, hasMTB, showOnTrackerMTB } from '@src/thirds/mtb'\r\nimport { canNamesBeHidden, getCombatantColor, getName, playersSeeName, toggleFreed, togglePlayersSeeName } from '@src/combat'\r\nimport { easeInQuad } from '@utils/math'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { thirdPartyToggleSeeName } from '@utils/anonymous/third'\r\nimport { getSameCombatants } from '../../../../../../foundryVTT-projects/@utils/foundry/combatant'\r\n\r\nexport class MiniTracker extends Application {\r\n    private _isExpanded: boolean\r\n    private _maxHeight?: number\r\n    private _dragging: boolean\r\n    private _lastCombat: string\r\n    private _lastCombatant: string\r\n    private _lastMoveTime: number\r\n    private _initialPosition: ApplicationPosition\r\n    private _initialPointer: { x: number; y: number } = { x: 0, y: 0 }\r\n    private _combatantHeight?: number\r\n    private _boxHeight?: number\r\n    private _innerMargins?: number\r\n    private _isReversed: boolean\r\n    private _dragHook: (event: MouseEvent) => void\r\n    private _dragEndHook: (event: MouseEvent) => void\r\n    private _expandedDebounce: () => void\r\n    private _coordsDebounce: () => void\r\n    private _menu?: ContextMenu\r\n    private _listHoverHook?: NodeJS.Timeout\r\n    private _resizeHook: (event: MouseEvent) => void\r\n    private _resizeEndHook: (event: MouseEvent) => void\r\n    private _sortable?: Sortable\r\n    private _hooks: number[]\r\n    private _lastTurn: number\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        const { left, bottom, top } = getSetting<TrackerCoords>('coords')\r\n        if (typeof left === 'number') this.position.left = left\r\n        if (typeof top === 'number') this.position.top = top\r\n        if (typeof bottom === 'number') this.position.bottom = bottom\r\n\r\n        const expanded = getSetting<string>('expanded')\r\n        this._isExpanded = expanded !== 'false'\r\n        this._maxHeight = expanded !== 'false' && expanded !== 'true' ? parseInt(expanded) : undefined\r\n\r\n        this._isReversed = getSetting<boolean>('reversed')\r\n\r\n        this._dragging = false\r\n\r\n        this._lastCombat = ''\r\n        this._lastCombatant = ''\r\n        this._lastTurn = -1\r\n\r\n        this._lastMoveTime = 0\r\n\r\n        this._dragHook = this.#onDrag.bind(this)\r\n        this._dragEndHook = this.#onDragEnd.bind(this)\r\n\r\n        this._resizeHook = this.#onResize.bind(this)\r\n        this._resizeEndHook = this.#onResizeEnd.bind(this)\r\n\r\n        this._hooks = [\r\n            Hooks.on('renderCombatTracker', () => this.render()),\r\n            Hooks.on('hoverToken', this.#onTokenHover.bind(this)),\r\n            Hooks.on('preCreateCombatant', this.#onPreCreateCombatant.bind(this)),\r\n            Hooks.on('targetToken', this.#renderTargets.bind(this)),\r\n        ]\r\n\r\n        this._coordsDebounce = debounce(this.#setCoords, 1000)\r\n        this._expandedDebounce = debounce(this.#setExpanded, 1000)\r\n\r\n        this._initialPosition = this.position\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return {\r\n            ...super.defaultOptions,\r\n            popOut: false,\r\n            minimizable: false,\r\n            template: templatePath('tracker.hbs'),\r\n        }\r\n    }\r\n\r\n    get isReversed() {\r\n        return this._isReversed\r\n    }\r\n\r\n    set isReversed(value) {\r\n        this._isReversed = value\r\n        this.render()\r\n        setSetting('reversed', value)\r\n    }\r\n\r\n    get isExpanded() {\r\n        return this._isExpanded\r\n    }\r\n\r\n    set isExpanded(value) {\r\n        this._isExpanded = value\r\n        if (value) this.#expandList()\r\n        else this.#collapseList()\r\n        this.#setExpanded()\r\n    }\r\n\r\n    get isDragging() {\r\n        return this._dragging\r\n    }\r\n\r\n    set isDragging(value) {\r\n        this.element.toggleClass('dragging', value)\r\n        this._dragging = value\r\n    }\r\n\r\n    get moveTick() {\r\n        const now = Date.now()\r\n        if (now - this._lastMoveTime < 1000 / 60) return false\r\n        this._lastMoveTime = now\r\n        return true\r\n    }\r\n\r\n    get innerElement() {\r\n        return this.element.find('.__inner')\r\n    }\r\n\r\n    get combatantElements() {\r\n        return this.element.find('.combatant')\r\n    }\r\n\r\n    get listElement() {\r\n        return this.element.find('.__inner > ol')\r\n    }\r\n\r\n    get combatantHeight() {\r\n        if (this._combatantHeight) return this._combatantHeight\r\n        this._combatantHeight = this.combatantElements.filter('.active').outerHeight(true)\r\n        return this._combatantHeight as number\r\n    }\r\n\r\n    get boxHeight() {\r\n        if (this._boxHeight) return this._boxHeight\r\n        const height = this.element.outerHeight(true)!\r\n        const listHeight = this.listElement.innerHeight()!\r\n        this._boxHeight = height - listHeight\r\n        return this._boxHeight\r\n    }\r\n\r\n    get innerMargins() {\r\n        if (this._innerMargins) return this._innerMargins\r\n        const inner = this.innerElement\r\n        this._innerMargins = parseInt(inner.css('margin-top')) + parseInt(inner.css('margin-bottom'))\r\n        return this._innerMargins\r\n    }\r\n\r\n    get minHeight() {\r\n        return this.combatantHeight + this.boxHeight\r\n    }\r\n\r\n    get maxHeight() {\r\n        return this._maxHeight\r\n    }\r\n\r\n    set maxHeight(value) {\r\n        this._maxHeight = value\r\n        this._expandedDebounce()\r\n    }\r\n\r\n    async getData(options?: Partial<ApplicationOptions> | undefined) {\r\n        const combat = ui.combat.viewed\r\n        if (!combat || !combat.turns.some(x => x.isOwner)) {\r\n            return { hasCombat: false }\r\n        }\r\n\r\n        const isGM = game.user.isGM\r\n        const currentCombatant = combat.combatant\r\n        const showHp = getSetting<ShowHP>('showHp')\r\n        const hpValuePath = getSetting<string>('hpValue')\r\n        const hpMaxPath = getSetting<string>('hpMax')\r\n        const endTurn = getSetting<boolean>('turn')\r\n        const reversed = this.isReversed\r\n        const hideNames = canNamesBeHidden()\r\n        const immobilize = getSetting<boolean>('immobilize') && !hasMTB()\r\n        const sceneId = canvas.scene?.id\r\n        const canPing = game.user.hasPermission('PING_CANVAS')\r\n        const hideDefeated = getSetting<boolean>('dead') && getCombatTrackerConfig().skipDefeated\r\n        const dim = getSetting<boolean>('dim')\r\n\r\n        let hasActive = false\r\n        let hasDecimals = false\r\n\r\n        const turns: Turn[] = []\r\n        for (const [i, combatant] of combat.turns.entries()) {\r\n            if (!combatant.visible) continue\r\n            if (hideDefeated && combatant.defeated && !combatant.actor?.hasPlayerOwner) continue\r\n\r\n            let defeated = combatant.isDefeated\r\n\r\n            const effects = new Map()\r\n            if (combatant.actor) {\r\n                for (const effect of combatant.actor.temporaryEffects) {\r\n                    if (effect.getFlag('core', 'statusId') === CONFIG.specialStatusEffects.DEFEATED) defeated = true\r\n                    else if (effect.icon) effects.set(effect.icon, { icon: effect.icon, name: effect.label })\r\n                }\r\n            }\r\n\r\n            const hpValue = !!hpValuePath ? getProperty<number | undefined>(combatant, `actor.system.${hpValuePath}`) : undefined\r\n            const hpMax = !!hpMaxPath ? getProperty<number | undefined>(combatant, `actor.system.${hpMaxPath}`) : undefined\r\n\r\n            let hpHue\r\n            if (hpValue !== undefined && hpMax !== undefined) {\r\n                const x = hpValue / hpMax\r\n                hpHue = easeInQuad(x) * 122 + 3\r\n            }\r\n\r\n            const initiative = combatant.initiative\r\n            const hasRolled = initiative !== null\r\n            if (hasRolled && !Number.isInteger(initiative)) hasDecimals = true\r\n\r\n            const active = i === combat.turn\r\n            if (active) hasActive = true\r\n\r\n            let name = combatant.name\r\n            const playersCanSeeName = playersSeeName(combatant)\r\n\r\n            const hidden = combatant.hidden\r\n            const hasPlayerOwner = !!combatant.actor?.hasPlayerOwner\r\n\r\n            const css = []\r\n            if (active) css.push('active')\r\n            if (hidden) css.push('hidden')\r\n            if (defeated) css.push('defeated')\r\n            if (hideNames && !playersCanSeeName) {\r\n                if (!isGM) name = getName(combatant)\r\n                else if (dim) css.push('anonymous')\r\n            }\r\n\r\n            const color = getCombatantColor(combatant)\r\n\r\n            const turn: Turn = {\r\n                combatantId: combatant.id,\r\n                tokenId: combatant.tokenId,\r\n                css: css.join(' '),\r\n                colors: {\r\n                    border: color.css,\r\n                    background: color.toRGBA(0.1),\r\n                },\r\n                name,\r\n                img: await ui.combat._getCombatantThumbnail(combatant),\r\n                hidden,\r\n                hasPlayerOwner,\r\n                playersCanSeeName,\r\n                freed: !immobilize || combatant === currentCombatant || !!getFlag(combatant, 'freed'),\r\n                canImmobilize: combatant !== currentCombatant,\r\n                defeated,\r\n                canPing: canPing && combatant.sceneId === sceneId,\r\n                effects: Array.from(effects.values()),\r\n                hasRolled,\r\n                initiative,\r\n                owner: combatant.isOwner,\r\n                hpValue,\r\n                hpMax,\r\n                hpHue,\r\n                active,\r\n                showHp:\r\n                    hpValue !== undefined &&\r\n                    showHp !== 'none' &&\r\n                    (isGM || showHp === 'all' || (showHp === 'friendly' && hasPlayerOwner)),\r\n            }\r\n\r\n            turns.push(turn)\r\n        }\r\n\r\n        if (!turns.some(x => x.owner)) {\r\n            return { hasCombat: false }\r\n        }\r\n\r\n        if (!hasActive) {\r\n            const active = Math.min(combat.turn ?? 0, turns.length - 1)\r\n            const combatant = turns[active]!\r\n            combatant.active = true\r\n            const css = combatant.css ? combatant.css.split(' ') : []\r\n            css.push('active')\r\n            combatant.css = css.join(' ')\r\n        }\r\n\r\n        const innerCss = []\r\n        if (this.isExpanded) innerCss.push('expanded')\r\n        if (reversed && !getSetting('fake-reversed')) innerCss.push('reversed')\r\n\r\n        const precision = CONFIG.Combat.initiative.decimals\r\n        turns.forEach(combatant => {\r\n            if (combatant.initiative === null) return\r\n            combatant.initiative = (combatant.initiative as number).toFixed(hasDecimals ? precision : 0)\r\n        })\r\n\r\n        return {\r\n            isGM,\r\n            turns,\r\n            endTurn,\r\n            hideNames,\r\n            immobilize,\r\n            showHp: showHp === 'all' || showHp === 'friendly' || (showHp === 'gm' && isGM),\r\n            hasCombat: true,\r\n            round: combat.round,\r\n            arrow: reversed ? 'up' : 'down',\r\n            innerCss: innerCss.join(' '),\r\n            isCurrentTurn: currentCombatant?.isOwner,\r\n            fontSize: getSetting<number>('scale'),\r\n        }\r\n    }\r\n\r\n    #renderTargets() {\r\n        const combat = ui.combat.viewed\r\n        if (!combat) return\r\n\r\n        const targetsIds = game.user.targets.ids\r\n        const turns = this.element.find<HTMLLIElement>('.__inner ol li.combatant')\r\n\r\n        turns.each(function () {\r\n            const { tokenId, combatantId } = this.dataset as { tokenId: string; combatantId: string }\r\n\r\n            const targetIcon = this.querySelector('.__details .__icons [data-control=\"targetCombatant\"]') as HTMLElement\r\n            targetIcon.classList.toggle('active', targetsIds.includes(tokenId))\r\n\r\n            const combatant = combat.combatants.get(combatantId)\r\n            if (!combatant) return\r\n\r\n            const targetsEl = this.querySelector('.__targets') as HTMLDivElement\r\n            targetsEl.innerHTML = ''\r\n\r\n            const colors = combatant.token?.object?.targeted.toObject().map(user => user.color) ?? []\r\n            for (const color of colors) {\r\n                const div = `<div class=\"target\" style=\"background-color: ${color};\"></div>`\r\n                targetsEl.insertAdjacentHTML('beforeend', div)\r\n            }\r\n        })\r\n    }\r\n\r\n    protected async _render(force?: boolean | undefined, options?: RenderOptions | undefined): Promise<void> {\r\n        await super._render(force, options)\r\n        this.#renderTargets()\r\n        if (game.user.isGM && showOnTrackerMTB()) cloneIcons(this.listElement)\r\n    }\r\n\r\n    render(force?: boolean, options?: any) {\r\n        const combat = ui.combat.viewed\r\n        const isGM = game.user.isGM\r\n        const combatId = combat?.id ?? ''\r\n        const combatant = combat?.combatant\r\n        const immobilize = getSetting<boolean>('immobilize') && !hasMTB()\r\n        const reveal = getSetting<boolean>('reveal')\r\n        const revealToken = getSetting<boolean>('revealToken')\r\n        const diffCombatant = this._lastCombatant !== combatant?.id\r\n        const diffTurn = combat?.turn !== this._lastTurn\r\n\r\n        if (isGM && this._lastCombat === combatId && combatant && diffCombatant && diffTurn) {\r\n            const token = combatant?.token\r\n\r\n            if (token && getSetting('pan') && combatant.visible) {\r\n                canvas.animatePan({ x: token.x, y: token.y })\r\n            }\r\n            if (combatant && !combatant.actor?.hasPlayerOwner) {\r\n                if (token?.object && getSetting('select')) token.object.control({ releaseOthers: true })\r\n\r\n                const sheet = combatant.actor?.sheet\r\n                if (sheet && getSetting('sheet')) sheet.render(true)\r\n            }\r\n        }\r\n\r\n        if (\r\n            isGM &&\r\n            combat &&\r\n            (this._lastCombat !== combatId || (combatant && diffCombatant && diffTurn)) &&\r\n            (immobilize || reveal)\r\n        ) {\r\n            const flag = flagsUpdatePath('freed')\r\n\r\n            const updates = combat.turns.reduce((combatants, combatant, i) => {\r\n                let updated = false\r\n                const update = { _id: combatant.id } as Record<string, unknown> & { _id: string }\r\n\r\n                if (reveal && i === combat.turn && combatant.hidden) {\r\n                    if (revealToken) combatant.token?.update({ hidden: false })\r\n                    update.hidden = false\r\n                    updated = true\r\n                }\r\n\r\n                if (immobilize && getFlag<boolean>(combatant, 'freed')) {\r\n                    update[flag] = false\r\n                    updated = true\r\n                }\r\n\r\n                if (updated) combatants.push(update)\r\n\r\n                return combatants\r\n            }, [] as EmbeddedDocumentUpdateData<Combatant>[])\r\n\r\n            if (updates.length) combat.updateEmbeddedDocuments('Combatant', updates)\r\n        }\r\n\r\n        this._lastCombat = combatId\r\n        this._lastCombatant = combatant?.id ?? ''\r\n        this._lastTurn = combat?.turn ?? -1\r\n\r\n        return super.render(force, options)\r\n    }\r\n\r\n    async close(options?: ({ force?: boolean | undefined } & Record<string, unknown>) | undefined): Promise<void> {\r\n        const result = await super.close(options)\r\n        this._hooks.forEach(x => Hooks.off('any', x))\r\n        return result\r\n    }\r\n\r\n    activateListeners(html: JQuery) {\r\n        const combat = ui.combat.viewed\r\n        if (!combat || !this.innerElement.length) return\r\n\r\n        const tracker = ui.combat\r\n\r\n        html.find('.draggable').on('mousedown', this.#onDragStart.bind(this))\r\n        html.find('.__resizer').on('mousedown', this.#onResizeStart.bind(this))\r\n\r\n        const list = html.find('.__inner > ol')\r\n        list.on('mouseenter', this.#onListHover.bind(this))\r\n        html.on('mouseleave', this.#onListOut.bind(this))\r\n\r\n        html.find('[data-control=trackerReverse]').on('click', () => (this.isReversed = !this.isReversed))\r\n        html.find('[data-control=trackerExpand]').on('click', () => (this.isExpanded = !this.isExpanded))\r\n\r\n        html.find('[data-control=targetCombatant]').on('click', this.#targetCombatant.bind(this))\r\n\r\n        html.find('.combat-control').on('click', tracker._onCombatControl.bind(tracker))\r\n        html.find('.combatant-control').on('click', tracker._onCombatantControl.bind(tracker))\r\n\r\n        const combatants = list.find('.combatant')\r\n        combatants.on('mouseenter', tracker._onCombatantHoverIn.bind(tracker))\r\n        combatants.on('mouseleave', tracker._onCombatantHoverOut.bind(tracker))\r\n\r\n        if (!game.user.isGM) return\r\n\r\n        this._contextMenu(html)\r\n        this.#makeSortable()\r\n\r\n        html.find('[data-control=trackerSettings]').on('click', () => new CombatTrackerConfig().render(true))\r\n\r\n        if (!hasMTB()) {\r\n            html.find('[data-control=\"toggleImmobilized\"]').on('click', this.#onToggleImmobilized.bind(this))\r\n        }\r\n\r\n        if (canNamesBeHidden() && thirdPartyToggleSeeName) {\r\n            html.find('[data-control=toggle-name-visibility]').on('click', this.#togglePlayersCanSeeName.bind(this))\r\n        }\r\n\r\n        combatants.on('click', tracker._onCombatantMouseDown.bind(tracker))\r\n    }\r\n\r\n    setPosition({ left, top, bottom }: ApplicationPosition) {\r\n        const el = this.element[0]!\r\n        const currentPosition = this.position\r\n        const minHeight = this.minHeight\r\n\r\n        const height = el.offsetHeight\r\n        const width = el.offsetWidth\r\n        const winHeight = window.innerHeight\r\n        const winWidth = window.innerWidth\r\n\r\n        left = left ?? winWidth / 2 - width / 2\r\n        top = top ?? winHeight / 2 - height / 2\r\n        bottom = bottom ?? winHeight / 2 - height / 2\r\n\r\n        const maxLeft = Math.max(winWidth - width, 0)\r\n        currentPosition.left = Math.clamped(left, 0, maxLeft)\r\n        el.style.left = currentPosition.left + 'px'\r\n\r\n        if (this.isReversed) {\r\n            if (bottom + minHeight > winHeight) bottom = winHeight - minHeight\r\n            if (bottom < 0) bottom = 0\r\n            el.style.bottom = bottom + 'px'\r\n            currentPosition.bottom = bottom\r\n            currentPosition.top = winHeight - bottom - minHeight\r\n        } else {\r\n            if (top + minHeight > winHeight) top = winHeight - minHeight\r\n            if (top < 0) top = 0\r\n            el.style.top = top + 'px'\r\n            currentPosition.top = top\r\n            currentPosition.bottom = winHeight - top - minHeight\r\n        }\r\n\r\n        this.#calculateHeight()\r\n\r\n        return currentPosition\r\n    }\r\n\r\n    _contextMenu($html: JQuery) {\r\n        this._menu = ContextMenu.create(this, $html, '.combatant', ui.combat._getEntryContextOptions())!\r\n    }\r\n\r\n    #onPreCreateCombatant(combatant: Combatant, data: DocumentUpdateData<Combatant>, context: DocumentModificationContext) {\r\n        if (context.temporary || !getSetting('hide') || combatant.actor?.hasPlayerOwner) return\r\n        combatant.updateSource({ hidden: true })\r\n    }\r\n\r\n    #getCombatantFromEvent(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const $combatant = $(event.currentTarget).closest('.combatant')\r\n        const id = $combatant.attr('data-combatant-id')!\r\n        return ui.combat.viewed?.combatants.get(id)\r\n    }\r\n\r\n    #targetCombatant(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        event.preventDefault()\r\n\r\n        const combatant = this.#getCombatantFromEvent(event)\r\n        const token = combatant?.token?.object\r\n        if (!token) return\r\n\r\n        const thisUser = game.user\r\n        const targeted = token.targeted.some(user => user === thisUser)\r\n\r\n        token.setTarget(!targeted, { releaseOthers: !event.shiftKey })\r\n    }\r\n\r\n    #onToggleImmobilized(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        event.preventDefault()\r\n        const combatant = this.#getCombatantFromEvent(event)\r\n        if (combatant) toggleFreed(combatant)\r\n    }\r\n\r\n    async #togglePlayersCanSeeName(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        event.preventDefault()\r\n        const combatant = this.#getCombatantFromEvent(event)\r\n        if (!combatant) return\r\n\r\n        if (event.shiftKey && combatant.actor && combatant.actor.isToken && game.combat?.scene) {\r\n            getSameCombatants(combatant).forEach(togglePlayersSeeName)\r\n        } else {\r\n            togglePlayersSeeName(combatant)\r\n        }\r\n    }\r\n\r\n    #makeSortable() {\r\n        if (!game.modules.get('_sortablejs')?.active) return\r\n        this._sortable = new Sortable(this.listElement[0]!, {\r\n            animation: 150,\r\n            draggable: '.combatant',\r\n            delay: 50,\r\n            onEnd: this.#onSortEnd.bind(this),\r\n        })\r\n    }\r\n\r\n    #onSortEnd(event: Sortable.SortableEvent) {\r\n        const id = event.item.dataset.combatantId\r\n        const combat = ui.combat.viewed\r\n        const oldIndex = /** @type {number} */ event.oldIndex\r\n        const newIndex = /** @type {number} */ event.newIndex\r\n\r\n        if (!combat || oldIndex === newIndex || !id) return\r\n\r\n        const turns = combat.turns\r\n        if (turns.length <= 1) return\r\n\r\n        const others = turns.filter(x => x.id !== id)\r\n        const prevCombatants = others.slice(0, newIndex)\r\n        const nextCombatants = others.slice(newIndex)\r\n\r\n        let prevInit = prevCombatants.reverse().find(x => x.initiative != null)?.initiative\r\n        let nextInit = nextCombatants.find(x => x.initiative != null)?.initiative\r\n\r\n        if (nextInit == null && prevInit == null) {\r\n            nextInit = 0\r\n            prevInit = 2\r\n        } else if (nextInit == null) {\r\n            nextInit = /** @type {number} */ prevInit! - 2\r\n        } else if (prevInit == null) {\r\n            prevInit = /** @type {number} */ nextInit + 2\r\n        }\r\n\r\n        // @ts-ignore\r\n        const newInit = (prevInit + nextInit) / 2\r\n        combat.setInitiative(id, newInit)\r\n    }\r\n\r\n    #onResizeStart(event: JQuery.MouseDownEvent) {\r\n        event.preventDefault()\r\n\r\n        window.addEventListener('mousemove', this._resizeHook)\r\n        window.addEventListener('mouseup', this._resizeEndHook)\r\n    }\r\n\r\n    #onResize(event: MouseEvent) {\r\n        event.preventDefault()\r\n\r\n        if (!this.moveTick) return\r\n\r\n        let maxHeight: number | undefined = event.clientY - (this.position.top ?? 0)\r\n        if (this.isReversed) maxHeight = -(maxHeight - this.minHeight)\r\n\r\n        maxHeight = Math.max(maxHeight, this.minHeight)\r\n\r\n        this.#calculateHeight(maxHeight)\r\n\r\n        const combatants = this.combatantElements.length\r\n        const expected = combatants * this.combatantHeight + this.boxHeight\r\n\r\n        if (maxHeight >= expected) maxHeight = undefined\r\n\r\n        this.maxHeight = maxHeight\r\n    }\r\n\r\n    #onResizeEnd(event: MouseEvent) {\r\n        event.preventDefault()\r\n\r\n        window.removeEventListener('mousemove', this._resizeHook)\r\n        window.removeEventListener('mouseup', this._resizeEndHook)\r\n    }\r\n\r\n    #onDragStart(event: JQuery.MouseDownEvent) {\r\n        event.preventDefault()\r\n\r\n        this.isDragging = true\r\n        this._initialPosition = duplicate(this.position)\r\n        this._initialPointer = { x: event.clientX, y: event.clientY }\r\n\r\n        window.addEventListener('mousemove', this._dragHook)\r\n        window.addEventListener('mouseup', this._dragEndHook)\r\n    }\r\n\r\n    #onDrag(event: MouseEvent) {\r\n        event.preventDefault()\r\n\r\n        if (!this.moveTick) return\r\n\r\n        const pos = this._initialPosition\r\n        const cursor = this._initialPointer\r\n        const left = (pos.left ?? 0) + (event.clientX - cursor.x)\r\n\r\n        if (this.isReversed) {\r\n            this.setPosition({\r\n                left,\r\n                bottom: (pos.bottom ?? 0) - (event.clientY - cursor.y),\r\n            })\r\n        } else {\r\n            this.setPosition({\r\n                left,\r\n                top: (pos.top ?? 0) + (event.clientY - cursor.y),\r\n            })\r\n        }\r\n\r\n        this._coordsDebounce()\r\n    }\r\n\r\n    #onDragEnd(event: MouseEvent) {\r\n        event.preventDefault()\r\n\r\n        this.isDragging = false\r\n        this.#calculateHeight()\r\n\r\n        window.removeEventListener('mousemove', this._dragHook)\r\n        window.removeEventListener('mouseup', this._dragEndHook)\r\n    }\r\n\r\n    #onTokenHover(token: Token, hovered: boolean) {\r\n        const combatant = token.combatant\r\n        if (!combatant) return\r\n        const combatants = this.combatantElements\r\n        combatants.removeClass('hovered')\r\n        if (hovered) combatants.filter(`[data-combatant-id=\"${combatant.id}\"]`).addClass('hovered')\r\n    }\r\n\r\n    #setExpanded() {\r\n        setSetting('expanded', !this.isExpanded ? 'false' : this.maxHeight || 'true')\r\n    }\r\n\r\n    #expandList() {\r\n        this.innerElement.addClass('expanded')\r\n        this.#calculateHeight()\r\n    }\r\n\r\n    #collapseList() {\r\n        if (this._listHoverHook) clearTimeout(this._listHoverHook)\r\n        this.innerElement.removeClass('expanded')\r\n        this._menu?.close({ animate: false })\r\n    }\r\n\r\n    #onListHover() {\r\n        if (this.isExpanded || !getSetting('hover')) return\r\n        const delay = getSetting<number>('delay')\r\n        if (delay) this._listHoverHook = setTimeout(() => this.#expandList(), delay)\r\n        else this.#expandList()\r\n    }\r\n\r\n    #onListOut() {\r\n        if (this.isExpanded) return\r\n        this.#collapseList()\r\n    }\r\n\r\n    #calculateHeight(tmpHeight?: number) {\r\n        const inner = this.innerElement\r\n        if (!inner.length) return\r\n\r\n        const winHeight = window.innerHeight\r\n\r\n        let maxHeight\r\n\r\n        if (this.isReversed) maxHeight = winHeight - (this.position.bottom ?? 0)\r\n        else maxHeight = winHeight - (this.position.top ?? 0)\r\n\r\n        if (tmpHeight && tmpHeight < maxHeight) {\r\n            maxHeight = tmpHeight\r\n        } else if (this.maxHeight && this.maxHeight < maxHeight) {\r\n            maxHeight = this.maxHeight\r\n        }\r\n\r\n        maxHeight = Math.max(maxHeight, this.minHeight)\r\n        maxHeight -= this.innerMargins\r\n\r\n        inner.css('max-height', maxHeight)\r\n\r\n        if (this.isExpanded) this.#scrollToCurrent()\r\n    }\r\n\r\n    #scrollToCurrent() {\r\n        const list = this.listElement\r\n        const height = list.innerHeight()!\r\n        if (height === list.prop('scrollHeight')) return\r\n        const active = list.find('> .active')[0]!\r\n        list.scrollTop(active.offsetTop - height / 2 + active.offsetHeight / 2)\r\n    }\r\n\r\n    #setCoords() {\r\n        const { left, top, bottom } = this.position\r\n        setSetting('coords', { left, top, bottom })\r\n    }\r\n}\r\n","export function easeInQuad(x: number): number {\r\n    return x * x\r\n}\r\n\r\nexport function easeInSine(x: number): number {\r\n    return 1 - Math.cos((x * Math.PI) / 2)\r\n}\r\n","export function getSameCombatants(combatant: Combatant) {\r\n    return combatant.combat.turns.filter(x => x.actorId === combatant.actorId)\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string | number | boolean>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string | number | boolean>,\r\n    arg2?: boolean | Record<string, string | number | boolean>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { warn } from '@utils/foundry/notification'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { tracker } from './main'\r\n\r\nexport function preUpdateToken(token: TokenDocument, data: Partial<TokenSource>) {\r\n    if (!tracker || !('x' in data || 'y' in data)) return\r\n\r\n    const combatant = token.combatant\r\n    const combat = ui.combat.viewed\r\n    if (!combat || !combatant || combat.combatant === combatant || getFlag(combatant, 'freed')) return\r\n\r\n    delete data.x\r\n    delete data.y\r\n\r\n    warn('immobilized')\r\n}\r\n","import { MiniTracker } from '@apps/tracker'\r\nimport { thirdPartyInitialization } from '@utils/anonymous/third'\r\nimport { error } from '@utils/foundry/notification'\r\nimport { getSetting, registerSetting } from '@utils/foundry/settings'\r\nimport { setModuleID } from '@utils/module'\r\nimport { hasMTB } from './thirds/mtb'\r\nimport { preUpdateToken } from './token'\r\nimport { renderCombatTrackerConfig } from './tracker'\r\n\r\nexport const MODULE_ID = 'mini-tracker'\r\nsetModuleID(MODULE_ID)\r\n\r\nexport let tracker: MiniTracker | null = null\r\n\r\nHooks.once('init', () => {\r\n    // CLIENT SETTINGS\r\n\r\n    registerSetting({\r\n        name: 'enabled',\r\n        scope: 'client',\r\n        config: true,\r\n        type: Boolean,\r\n        default: true,\r\n        onChange: (enabled: boolean) => {\r\n            if (enabled) createTracker()\r\n            else closeTracker()\r\n        },\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'scale',\r\n        scope: 'client',\r\n        config: true,\r\n        type: Number,\r\n        default: 14,\r\n        range: {\r\n            min: 10,\r\n            max: 30,\r\n            step: 2,\r\n        },\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'hover',\r\n        scope: 'client',\r\n        config: true,\r\n        type: Boolean,\r\n        default: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'delay',\r\n        scope: 'client',\r\n        config: true,\r\n        type: Number,\r\n        default: 250,\r\n    })\r\n\r\n    // CLIENT HIDDEN SETTINGS\r\n\r\n    registerSetting({\r\n        name: 'reversed',\r\n        scope: 'client',\r\n        type: Boolean,\r\n        default: false,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'fake-reversed',\r\n        scope: 'client',\r\n        type: Boolean,\r\n        default: false,\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'coords',\r\n        scope: 'client',\r\n        type: Object,\r\n        default: {},\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'expanded',\r\n        scope: 'client',\r\n        type: String,\r\n        default: 'false',\r\n    })\r\n\r\n    // WORLD SETTINGS\r\n\r\n    registerSetting({\r\n        name: 'turn',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'showHp',\r\n        config: true,\r\n        type: String,\r\n        default: 'friendly',\r\n        choices: ['none', 'gm', 'friendly', 'all'],\r\n        onChange: hpHooks,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'hpValue',\r\n        config: true,\r\n        type: String,\r\n        default: 'attributes.hp.value',\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'hpMax',\r\n        config: true,\r\n        type: String,\r\n        default: 'attributes.hp.max',\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'dim',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'dead',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'hide',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'reveal',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'revealToken',\r\n        config: true,\r\n        type: Boolean,\r\n        default: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'immobilize',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n        onChange: immobilizeHooks,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'pan',\r\n        config: true,\r\n        type: Boolean,\r\n        default: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'select',\r\n        config: true,\r\n        type: Boolean,\r\n        default: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'sheet',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n    })\r\n\r\n    thirdPartyInitialization()\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    if (game.user.isGM) checkForSortable()\r\n\r\n    setTimeout(() => {\r\n        if (getSetting('enabled')) createTracker()\r\n        if (getSetting('immobilize')) immobilizeHooks(true)\r\n        if (getSetting('hpValue')) hpHooks(true)\r\n    }, 1000)\r\n})\r\n\r\nHooks.on('renderCombatTrackerConfig', renderCombatTrackerConfig)\r\n\r\nfunction hpHooks(show: unknown) {\r\n    const method = show ? 'on' : 'off'\r\n    Hooks[method]('updateActor', updateActor)\r\n    refreshTracker()\r\n}\r\n\r\nfunction updateActor(actor: Actor, data: DocumentUpdateData) {\r\n    const hpValue = getSetting<string>('hpValue')\r\n    const hpMax = getSetting<string>('hpMax')\r\n    if (hpValue !== undefined && hasProperty(data, `system.${hpValue}`)) return refreshTracker()\r\n    if (hpMax !== undefined && hasProperty(data, `system.${hpMax}`)) return refreshTracker()\r\n}\r\n\r\nfunction immobilizeHooks(immobilize: unknown) {\r\n    if (hasMTB()) return\r\n    if (!game.user.isGM) {\r\n        const method = immobilize ? 'on' : 'off'\r\n        Hooks.on('preUpdateToken', preUpdateToken)\r\n    } else {\r\n        refreshTracker()\r\n    }\r\n}\r\n\r\nfunction checkForSortable() {\r\n    if (game.modules.get('_sortablejs')?.active) return\r\n    error('sortable', true)\r\n}\r\n\r\nfunction refreshTracker() {\r\n    tracker?.render()\r\n}\r\n\r\nfunction createTracker() {\r\n    if (tracker) return\r\n    tracker = new MiniTracker()\r\n    tracker.render(true)\r\n}\r\n\r\nfunction closeTracker() {\r\n    if (tracker) tracker.close()\r\n    tracker = null\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\nimport { getSetting, setSetting } from '@utils/foundry/settings'\r\n\r\nexport function renderCombatTrackerConfig(config: CombatTrackerConfig, html: JQuery) {\r\n    injectHTML(html)\r\n    addEvents(html)\r\n    html.css('height', 'auto')\r\n}\r\n\r\nfunction addEvents(html: JQuery) {\r\n    html.find<HTMLInputElement>('input[name=\"hideDeads\"]').on('change', function () {\r\n        const checked = $(this).is(':checked')\r\n        setSetting('dead', checked)\r\n    })\r\n}\r\n\r\nfunction injectHTML(html: JQuery) {\r\n    const checked = getSetting('dead') ? 'checked' : ''\r\n\r\n    let content = '<div class=\"form-group\">'\r\n    content += `<label>${localize('settings.dead.name')}</label>`\r\n    content += `<input type=\"checkbox\" name=\"hideDeads\" ${checked}>`\r\n    content += `<p class=\"notes\">${localize('settings.dead.hint')}</p>`\r\n    content += '</div>'\r\n\r\n    html.find('.form-group').last().after(content)\r\n}\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","path","join","templatePath","filter","x","getSetting","game","settings","setSetting","value","set","registerSetting","options","name","scope","config","hint","Array","isArray","choices","reduce","choice","register","getModule","id","modules","hasMTB","active","tokenSetsNameVisibility","system","has","thirdPartyCanNamesBeHidden","thirdPartyPlayersSeeName","thirdPartyToggleSeeName","thirdPartyGetName","localize","args","data","i18n","format","getFlag","doc","fallback","SYSTEM_ID","canNamesBeHidden","playersSeeName","combatant","actor","hasPlayerOwner","togglePlayersSeeName","getName","getCombatantColor","dispositionColor","CONFIG","Canvas","dispositionColors","NEUTRAL","alliance","PARTY","FRIENDLY","HOSTILE","getPF2eDispositionColor","token","disposition","CONST","TOKEN_DISPOSITIONS","getCombatantDispositionColor","Color","MiniTracker","Application","_isExpanded","_maxHeight","_dragging","_lastCombat","_lastCombatant","_lastMoveTime","_initialPosition","_initialPointer","y","_combatantHeight","_boxHeight","_innerMargins","_isReversed","_dragHook","_dragEndHook","_expandedDebounce","_coordsDebounce","_menu","_listHoverHook","_resizeHook","_resizeEndHook","_sortable","_hooks","_lastTurn","constructor","super","left","bottom","top","this","position","expanded","parseInt","undefined","bind","Hooks","on","render","debounce","defaultOptions","popOut","minimizable","template","isReversed","isExpanded","isDragging","element","toggleClass","moveTick","now","Date","innerElement","find","combatantElements","listElement","combatantHeight","outerHeight","boxHeight","height","listHeight","innerHeight","innerMargins","inner","css","minHeight","maxHeight","async","combat","ui","viewed","turns","some","isOwner","hasCombat","isGM","user","currentCombatant","showHp","hpValuePath","hpMaxPath","endTurn","reversed","hideNames","immobilize","sceneId","canvas","scene","canPing","hasPermission","hideDefeated","skipDefeated","dim","hasActive","hasDecimals","i","entries","visible","defeated","isDefeated","effects","Map","effect","temporaryEffects","specialStatusEffects","DEFEATED","icon","label","hpValue","getProperty","hpMax","hpHue","initiative","hasRolled","Number","isInteger","turn","playersCanSeeName","hidden","push","color","combatantId","tokenId","colors","border","background","toRGBA","img","_getCombatantThumbnail","freed","canImmobilize","from","values","owner","Math","min","length","split","innerCss","precision","Combat","decimals","forEach","toFixed","round","arrow","isCurrentTurn","fontSize","targetsIds","targets","ids","each","dataset","querySelector","classList","toggle","includes","combatants","targetsEl","innerHTML","object","targeted","toObject","map","div","insertAdjacentHTML","force","list","_render","li","$","attr","clone","before","combatId","reveal","revealToken","diffCombatant","diffTurn","animatePan","control","releaseOthers","sheet","flag","flagsUpdatePath","updates","updated","update","_id","updateEmbeddedDocuments","result","close","off","activateListeners","html","tracker","_onCombatControl","_onCombatantControl","_onCombatantHoverIn","_onCombatantHoverOut","_contextMenu","CombatTrackerConfig","_onCombatantMouseDown","setPosition","el","currentPosition","offsetHeight","width","offsetWidth","winHeight","window","winWidth","innerWidth","maxLeft","max","clamped","style","$html","ContextMenu","create","_getEntryContextOptions","context","temporary","updateSource","event","currentTarget","closest","preventDefault","thisUser","setTarget","shiftKey","setFlag","toggleFreed","isToken","actorId","getSameCombatants","Sortable","animation","draggable","delay","onEnd","item","oldIndex","newIndex","others","prevCombatants","slice","nextCombatants","prevInit","reverse","nextInit","newInit","setInitiative","addEventListener","clientY","removeEventListener","duplicate","clientX","pos","cursor","hovered","removeClass","addClass","clearTimeout","animate","setTimeout","tmpHeight","scrollTop","offsetTop","notify","str","arg1","arg2","arg3","type","permanent","notifications","preUpdateToken","isSystem","setModuleID","hpHooks","show","updateActor","refreshTracker","hasProperty","immobilizeHooks","createTracker","once","Boolean","default","onChange","enabled","range","step","String","anonymous","api","toggleSeeName","thirdPartyInitialization","checked","content","last","after","injectHTML","is","addEvents"],"sourceRoot":""}