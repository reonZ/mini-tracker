{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/settings.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/module.ts","webpack:///./src/thirds/mtb.ts","webpack:///../../../../foundryVTT-projects/@utils/anonymous/pf2e.ts","webpack:///../../../../foundryVTT-projects/@utils/anonymous/third.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///./src/combat.ts","webpack:///./src/apps/tracker.ts","webpack:///../../../../foundryVTT-projects/@utils/math.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/combatant.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///./src/token.ts","webpack:///./src/main.ts","webpack:///./src/tracker.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { getSettingLocalizationPath } from '@utils/foundry/path'\r\n\r\nexport function getSetting<T extends any>(key: string) {\r\n    return game.settings.get(MODULE_ID, key) as T\r\n}\r\n\r\nexport function setSetting(key: string, value: unknown) {\r\n    return game.settings.set(MODULE_ID, key, value)\r\n}\r\n\r\n/**\r\n * options.scope = 'world'\r\n *\r\n * options.config = false\r\n */\r\nexport function registerSetting<\r\n    TType extends number | string | boolean | object | Function,\r\n    TChoices extends Record<string, unknown> | undefined\r\n>(options: Omit<SettingRegistration<TType, TChoices>, 'choices'> & { choices?: string[] | Record<string, unknown> }) {\r\n    const name = options.name\r\n    options.scope = options.scope ?? 'world'\r\n    options.config = options.config ?? false\r\n    if (options.config) {\r\n        options.name = getSettingLocalizationPath(name, 'name')\r\n        options.hint = getSettingLocalizationPath(name, 'hint')\r\n    }\r\n    if (Array.isArray(options.choices)) {\r\n        options.choices = options.choices.reduce((choices, choice) => {\r\n            choices[choice] = getSettingLocalizationPath(name, 'choices', choice)\r\n            return choices\r\n        }, {} as Record<string, unknown>)\r\n    }\r\n    game.settings.register<TType, TChoices>(MODULE_ID, name, options as SettingRegistration<TType, TChoices>)\r\n}\r\n\r\n/**\r\n * options.restricted = true\r\n *\r\n * options.icon = 'fas fa-cogs'\r\n */\r\nexport function registerSettingMenu(\r\n    options: RequiredBy<Partial<Omit<SettingSubmenuConfig, 'type'>>, 'name'> & { type: ConstructorOf<FormApplication> }\r\n) {\r\n    const name = options.name\r\n    options.name = getSettingLocalizationPath('menus', name, 'name')\r\n    options.label = getSettingLocalizationPath('menus', name, 'label')\r\n    options.hint = getSettingLocalizationPath('menus', name, 'hint')\r\n    options.restricted = options.restricted ?? true\r\n    options.icon = options.icon ?? 'fas fa-cogs'\r\n    game.settings.registerMenu(MODULE_ID, name, options as SettingSubmenuConfig)\r\n}\r\n\r\nexport function getCombatTrackerConfig() {\r\n    return game.settings.get('core', 'combatTrackerConfig') as { resource: string; skipDefeated: boolean }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\ntype OwnModule = 'anonymous' | 'idleuh' | 'pf2e-hero-actions'\r\n\r\ntype ReturnedModule<T extends Record<string, any> | unknown = unknown> = Module<T> | undefined\r\ntype ReturnedModuleApi<T extends Record<string, any>> = Module<T>['api'] | undefined\r\n\r\nexport function getModule<T extends Record<string, any> | unknown = unknown>(id: string | OwnModule) {\r\n    return game.modules.get(id) as ReturnedModule<T>\r\n}\r\n\r\nexport function getCurrentModule<T extends Record<string, any> | unknown = unknown>() {\r\n    return getModule(MODULE_ID) as Module<T>\r\n}\r\n\r\nexport function getModuleApi<T extends Record<string, any>>(id: string | OwnModule) {\r\n    return getModule<T>(id)?.api as ReturnedModuleApi<T>\r\n}\r\n","import { getModule } from '@utils/foundry/module'\r\n\r\nconst MODULE_ID = 'monks-tokenbar'\r\n\r\nexport function hasMTB() {\r\n    return getModule(MODULE_ID)?.active\r\n}\r\n\r\nexport function cloneIcons(list: JQuery) {\r\n    const ol = ui.combat.element.find<HTMLOListElement>('#combat-tracker')\r\n    const combatants = ol.find<HTMLLIElement>('.combatant:has([data-control=\"toggleMovement\"])')\r\n\r\n    combatants.each(function () {\r\n        const li = $(this)\r\n        const id = li.attr('data-combatant-id')!\r\n        const icon = li.find<HTMLAnchorElement>('[data-control=\"toggleMovement\"]')\r\n        const clone = icon.clone(true)\r\n\r\n        clone.on('click', () => icon.toggleClass('active'))\r\n        icon.on('click', () => clone.toggleClass('active'))\r\n\r\n        list.find(`[data-combatant-id=\"${id}\"] [data-control=\"toggleDefeated\"]`).before(clone)\r\n    })\r\n}\r\n\r\nexport function showOnTrackerMTB() {\r\n    return hasMTB() && !!game.settings.get(MODULE_ID, 'show-on-tracker')\r\n}\r\n","export function tokenSetsNameVisibility() {\r\n    if (game.system.id !== 'pf2e') return false\r\n    if (game.settings.settings.has('pf2e.metagame.tokenSetsNameVisibility'))\r\n        return !!game.settings.get('pf2e', 'metagame.tokenSetsNameVisibility')\r\n    return !!game.settings.get('pf2e', 'metagame_tokenSetsNameVisibility')\r\n}\r\n","import { getModuleApi } from '@utils/foundry/module'\r\nimport { tokenSetsNameVisibility } from '@utils/anonymous/pf2e'\r\n\r\nexport let thirdPartyCanNamesBeHidden: () => boolean\r\nexport let thirdPartyPlayersSeeName: ((combatant: Combatant) => boolean) | undefined\r\nexport let thirdPartyToggleSeeName: ((combatant: Combatant) => Promise<unknown>) | undefined\r\nexport let thirdPartyGetName: ((combatant: Combatant) => string) | undefined\r\n\r\nexport function thirdPartyInitialization() {\r\n    const anonymous = getModuleApi('anonymous')\r\n    if (anonymous) {\r\n        thirdPartyCanNamesBeHidden = () => true\r\n        thirdPartyPlayersSeeName = anonymous.playersSeeName\r\n        thirdPartyToggleSeeName = anonymous.toggleSeeName\r\n        thirdPartyGetName = anonymous.getName\r\n    } else if (game.system.id === 'pf2e') {\r\n        thirdPartyCanNamesBeHidden = tokenSetsNameVisibility\r\n        thirdPartyPlayersSeeName = combatant => (combatant as CombatantPF2e).playersCanSeeName\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        path: {\r\n            value: (key: string) => localizePath(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function flagPath(key: string) {\r\n    return `flags.${MODULE_ID}.key`\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId<T extends DocumentUUID>(doc: ClientDocument) {\r\n    return doc.getFlag('core', 'sourceId') as T | undefined\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocument, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocument, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","import {\r\n    thirdPartyCanNamesBeHidden,\r\n    thirdPartyGetName,\r\n    thirdPartyPlayersSeeName,\r\n    thirdPartyToggleSeeName,\r\n} from '@utils/anonymous/third'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { getFlag, setFlag } from '@utils/foundry/flags'\r\n\r\nexport function canNamesBeHidden() {\r\n    return thirdPartyCanNamesBeHidden?.() ?? false\r\n}\r\n\r\nexport function playersSeeName(combatant: Combatant) {\r\n    return combatant.actor?.hasPlayerOwner || (thirdPartyPlayersSeeName?.(combatant) ?? true)\r\n}\r\n\r\nexport function togglePlayersSeeName(combatant: Combatant) {\r\n    return thirdPartyToggleSeeName?.(combatant)\r\n}\r\n\r\nexport function getName(combatant: Combatant) {\r\n    return thirdPartyGetName?.(combatant) ?? localize('unknown')\r\n}\r\n\r\nexport function toggleFreed(combatant: Combatant) {\r\n    const immobilized = getFlag<boolean>(combatant, 'freed')\r\n    setFlag(combatant, 'freed', !immobilized)\r\n}\r\n","import { getCombatTrackerConfig, getSetting, setSetting } from '@utils/foundry/settings'\r\nimport { flagsUpdatePath, templatePath } from '@utils/foundry/path'\r\nimport { cloneIcons, hasMTB, showOnTrackerMTB } from '@src/thirds/mtb'\r\nimport { canNamesBeHidden, getName, playersSeeName, toggleFreed, togglePlayersSeeName } from '@src/combat'\r\nimport { easeInQuad } from '@utils/math'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { thirdPartyToggleSeeName } from '@utils/anonymous/third'\r\nimport { getSameCombatants } from '../../../../../../foundryVTT-projects/@utils/foundry/combatant'\r\n\r\nexport class MiniTracker extends Application {\r\n    private _isExpanded: boolean\r\n    private _maxHeight?: number\r\n    private _dragging: boolean\r\n    private _lastCombat: string\r\n    private _lastCombatant: string\r\n    private _lastMoveTime: number\r\n    private _initialPosition: ApplicationPosition\r\n    private _initialPointer: { x: number; y: number } = { x: 0, y: 0 }\r\n    private _combatantHeight?: number\r\n    private _boxHeight?: number\r\n    private _innerMargins?: number\r\n    private _isReversed: boolean\r\n    private _dragHook: (event: MouseEvent) => void\r\n    private _dragEndHook: (event: MouseEvent) => void\r\n    private _expandedDebounce: () => void\r\n    private _coordsDebounce: () => void\r\n    private _menu?: ContextMenu\r\n    private _listHoverHook?: NodeJS.Timeout\r\n    private _resizeHook: (event: MouseEvent) => void\r\n    private _resizeEndHook: (event: MouseEvent) => void\r\n    private _sortable?: Sortable\r\n    private _hooks: number[]\r\n    private _lastTurn: number\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        const { left, bottom, top } = getSetting<TrackerCoords>('coords')\r\n        if (typeof left === 'number') this.position.left = left\r\n        if (typeof top === 'number') this.position.top = top\r\n        if (typeof bottom === 'number') this.position.bottom = bottom\r\n\r\n        const expanded = getSetting<string>('expanded')\r\n        this._isExpanded = expanded !== 'false'\r\n        this._maxHeight = expanded !== 'false' && expanded !== 'true' ? parseInt(expanded) : undefined\r\n\r\n        this._isReversed = getSetting<boolean>('reversed')\r\n\r\n        this._dragging = false\r\n\r\n        this._lastCombat = ''\r\n        this._lastCombatant = ''\r\n        this._lastTurn = -1\r\n\r\n        this._lastMoveTime = 0\r\n\r\n        this._dragHook = this.#onDrag.bind(this)\r\n        this._dragEndHook = this.#onDragEnd.bind(this)\r\n\r\n        this._resizeHook = this.#onResize.bind(this)\r\n        this._resizeEndHook = this.#onResizeEnd.bind(this)\r\n\r\n        this._hooks = [\r\n            Hooks.on('renderCombatTracker', this.#onRender.bind(this)),\r\n            Hooks.on('hoverToken', this.#onTokenHover.bind(this)),\r\n            Hooks.on('preCreateCombatant', this.#onPreCreateCombatant.bind(this)),\r\n            Hooks.on('targetToken', this.#onRender.bind(this)),\r\n        ]\r\n\r\n        this._coordsDebounce = debounce(this.#setCoords, 1000)\r\n        this._expandedDebounce = debounce(this.#setExpanded, 1000)\r\n\r\n        this._initialPosition = this.position\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return {\r\n            ...super.defaultOptions,\r\n            popOut: false,\r\n            minimizable: false,\r\n            template: templatePath('tracker.hbs'),\r\n        }\r\n    }\r\n\r\n    get isReversed() {\r\n        return this._isReversed\r\n    }\r\n\r\n    set isReversed(value) {\r\n        this._isReversed = value\r\n        this.render()\r\n        setSetting('reversed', value)\r\n    }\r\n\r\n    get isExpanded() {\r\n        return this._isExpanded\r\n    }\r\n\r\n    set isExpanded(value) {\r\n        this._isExpanded = value\r\n        if (value) this.#expandList()\r\n        else this.#collapseList()\r\n        this.#setExpanded()\r\n    }\r\n\r\n    get isDragging() {\r\n        return this._dragging\r\n    }\r\n\r\n    set isDragging(value) {\r\n        this.element.toggleClass('dragging', value)\r\n        this._dragging = value\r\n    }\r\n\r\n    get moveTick() {\r\n        const now = Date.now()\r\n        if (now - this._lastMoveTime < 1000 / 60) return false\r\n        this._lastMoveTime = now\r\n        return true\r\n    }\r\n\r\n    get innerElement() {\r\n        return this.element.find('.__inner')\r\n    }\r\n\r\n    get combatantElements() {\r\n        return this.element.find('.combatant')\r\n    }\r\n\r\n    get listElement() {\r\n        return this.element.find('.__inner > ol')\r\n    }\r\n\r\n    get combatantHeight() {\r\n        if (this._combatantHeight) return this._combatantHeight\r\n        this._combatantHeight = this.combatantElements.filter('.active').outerHeight(true)\r\n        return this._combatantHeight as number\r\n    }\r\n\r\n    get boxHeight() {\r\n        if (this._boxHeight) return this._boxHeight\r\n        const height = this.element.outerHeight(true)!\r\n        const listHeight = this.listElement.innerHeight()!\r\n        this._boxHeight = height - listHeight\r\n        return this._boxHeight\r\n    }\r\n\r\n    get innerMargins() {\r\n        if (this._innerMargins) return this._innerMargins\r\n        const inner = this.innerElement\r\n        this._innerMargins = parseInt(inner.css('margin-top')) + parseInt(inner.css('margin-bottom'))\r\n        return this._innerMargins\r\n    }\r\n\r\n    get minHeight() {\r\n        return this.combatantHeight + this.boxHeight\r\n    }\r\n\r\n    get maxHeight() {\r\n        return this._maxHeight\r\n    }\r\n\r\n    set maxHeight(value) {\r\n        this._maxHeight = value\r\n        this._expandedDebounce()\r\n    }\r\n\r\n    async getData(options?: Partial<ApplicationOptions> | undefined) {\r\n        const combat = ui.combat.viewed\r\n        if (!combat || !combat.turns.some(x => x.isOwner)) {\r\n            return { hasCombat: false }\r\n        }\r\n\r\n        const isGM = game.user.isGM\r\n        const currentCombatant = combat.combatant\r\n        const showHp = getSetting<ShowHP>('showHp')\r\n        const hpValuePath = getSetting<string>('hpValue')\r\n        const hpMaxPath = getSetting<string>('hpMax')\r\n        const endTurn = getSetting<boolean>('turn')\r\n        const reversed = this.isReversed\r\n        const hideNames = canNamesBeHidden()\r\n        const immobilize = getSetting<boolean>('immobilize') && !hasMTB()\r\n        const sceneId = canvas.scene?.id\r\n        const canPing = game.user.hasPermission('PING_CANVAS')\r\n        const hideDefeated = getSetting<boolean>('dead') && getCombatTrackerConfig().skipDefeated\r\n        const dim = getSetting<boolean>('dim')\r\n\r\n        let hasActive = false\r\n        let hasDecimals = false\r\n\r\n        const turns: Turn[] = []\r\n        for (const [i, combatant] of combat.turns.entries()) {\r\n            if (!combatant.visible) continue\r\n            if (hideDefeated && combatant.defeated && !combatant.actor?.hasPlayerOwner) continue\r\n\r\n            let defeated = combatant.isDefeated\r\n\r\n            const effects = new Map()\r\n            if (combatant.actor) {\r\n                for (const effect of combatant.actor.temporaryEffects) {\r\n                    if (effect.getFlag('core', 'statusId') === CONFIG.specialStatusEffects.DEFEATED) defeated = true\r\n                    else if (effect.icon) effects.set(effect.icon, { icon: effect.icon, name: effect.label })\r\n                }\r\n            }\r\n\r\n            const hpValue = !!hpValuePath ? getProperty<number | undefined>(combatant, `actor.system.${hpValuePath}`) : undefined\r\n            const hpMax = !!hpMaxPath ? getProperty<number | undefined>(combatant, `actor.system.${hpMaxPath}`) : undefined\r\n\r\n            let hpHue\r\n            if (hpValue !== undefined && hpMax !== undefined) {\r\n                const x = hpValue / hpMax\r\n                hpHue = easeInQuad(x) * 122 + 3\r\n            }\r\n\r\n            const initiative = combatant.initiative\r\n            const hasRolled = initiative !== null\r\n            if (hasRolled && !Number.isInteger(initiative)) hasDecimals = true\r\n\r\n            const active = i === combat.turn\r\n            if (active) hasActive = true\r\n\r\n            let name = combatant.name\r\n            const playersCanSeeName = playersSeeName(combatant)\r\n\r\n            const hidden = combatant.hidden\r\n            const hasPlayerOwner = !!combatant.actor?.hasPlayerOwner\r\n\r\n            const css = []\r\n            if (active) css.push('active')\r\n            if (hidden) css.push('hidden')\r\n            if (defeated) css.push('defeated')\r\n            if (hideNames && !playersCanSeeName) {\r\n                if (!isGM) name = getName(combatant)\r\n                else if (dim) css.push('anonymous')\r\n            }\r\n\r\n            const turn: Turn = {\r\n                id: combatant.id,\r\n                css: css.join(' '),\r\n                name,\r\n                img: await ui.combat._getCombatantThumbnail(combatant),\r\n                hidden,\r\n                hasPlayerOwner,\r\n                playersCanSeeName,\r\n                freed: !immobilize || combatant === currentCombatant || !!getFlag(combatant, 'freed'),\r\n                canImmobilize: combatant !== currentCombatant,\r\n                defeated,\r\n                canPing: canPing && combatant.sceneId === sceneId,\r\n                effects: Array.from(effects.values()),\r\n                hasRolled,\r\n                initiative,\r\n                owner: combatant.isOwner,\r\n                hpValue,\r\n                hpMax,\r\n                hpHue,\r\n                active,\r\n                targeted:\r\n                    // @ts-ignore\r\n                    combatant.token?.object.targeted\r\n                        .toObject()\r\n                        .filter(x => !x.isGM)\r\n                        .map(x => x.color) ?? [],\r\n                showHp:\r\n                    hpValue !== undefined &&\r\n                    showHp !== 'none' &&\r\n                    (isGM || showHp === 'all' || (showHp === 'friendly' && hasPlayerOwner)),\r\n            }\r\n\r\n            turns.push(turn)\r\n        }\r\n\r\n        if (!turns.some(x => x.owner)) {\r\n            return { hasCombat: false }\r\n        }\r\n\r\n        if (!hasActive) {\r\n            const active = Math.min(combat.turn ?? 0, turns.length - 1)\r\n            const combatant = turns[active]!\r\n            combatant.active = true\r\n            const css = combatant.css ? combatant.css.split(' ') : []\r\n            css.push('active')\r\n            combatant.css = css.join(' ')\r\n        }\r\n\r\n        const innerCss = []\r\n        if (this.isExpanded) innerCss.push('expanded')\r\n        if (reversed && !getSetting('fake-reversed')) innerCss.push('reversed')\r\n\r\n        const precision = CONFIG.Combat.initiative.decimals\r\n        turns.forEach(combatant => {\r\n            if (combatant.initiative === null) return\r\n            combatant.initiative = (combatant.initiative as number).toFixed(hasDecimals ? precision : 0)\r\n        })\r\n\r\n        return {\r\n            isGM,\r\n            turns,\r\n            endTurn,\r\n            hideNames,\r\n            immobilize,\r\n            showHp: showHp === 'all' || showHp === 'friendly' || (showHp === 'gm' && isGM),\r\n            hasCombat: true,\r\n            round: combat.round,\r\n            arrow: reversed ? 'up' : 'down',\r\n            innerCss: innerCss.join(' '),\r\n            isCurrentTurn: currentCombatant?.isOwner,\r\n            fontSize: getSetting<number>('scale'),\r\n        }\r\n    }\r\n\r\n    #onRender() {\r\n        this.render()\r\n    }\r\n\r\n    protected async _render(force?: boolean | undefined, options?: RenderOptions | undefined): Promise<void> {\r\n        await super._render(force, options)\r\n        if (game.user.isGM && showOnTrackerMTB()) cloneIcons(this.listElement)\r\n    }\r\n\r\n    render(force?: boolean, options?: any) {\r\n        const combat = ui.combat.viewed\r\n        const isGM = game.user.isGM\r\n        const combatId = combat?.id ?? ''\r\n        const combatant = combat?.combatant\r\n        const immobilize = getSetting<boolean>('immobilize') && !hasMTB()\r\n        const reveal = getSetting<boolean>('reveal')\r\n        const revealToken = getSetting<boolean>('revealToken')\r\n        const diffCombatant = this._lastCombatant !== combatant?.id\r\n        const diffTurn = combat?.turn !== this._lastTurn\r\n\r\n        if (isGM && this._lastCombat === combatId && combatant && diffCombatant && diffTurn) {\r\n            const token = combatant?.token\r\n\r\n            if (token && getSetting('pan') && combatant.visible) {\r\n                canvas.animatePan({ x: token.x, y: token.y })\r\n            }\r\n            if (combatant && !combatant.actor?.hasPlayerOwner) {\r\n                if (token?.object && getSetting('select')) token.object.control({ releaseOthers: true })\r\n\r\n                const sheet = combatant.actor?.sheet\r\n                if (sheet && getSetting('sheet')) sheet.render(true)\r\n            }\r\n        }\r\n\r\n        if (\r\n            isGM &&\r\n            combat &&\r\n            (this._lastCombat !== combatId || (combatant && diffCombatant && diffTurn)) &&\r\n            (immobilize || reveal)\r\n        ) {\r\n            const flag = flagsUpdatePath('freed')\r\n\r\n            const updates = combat.turns.reduce((combatants, combatant, i) => {\r\n                let updated = false\r\n                const update = { _id: combatant.id } as Record<string, unknown> & { _id: string }\r\n\r\n                if (reveal && i === combat.turn && combatant.hidden) {\r\n                    if (revealToken) combatant.token?.update({ hidden: false })\r\n                    update.hidden = false\r\n                    updated = true\r\n                }\r\n\r\n                if (immobilize && getFlag<boolean>(combatant, 'freed')) {\r\n                    update[flag] = false\r\n                    updated = true\r\n                }\r\n\r\n                if (updated) combatants.push(update)\r\n\r\n                return combatants\r\n            }, [] as EmbeddedDocumentUpdateData<Combatant>[])\r\n\r\n            if (updates.length) combat.updateEmbeddedDocuments('Combatant', updates)\r\n        }\r\n\r\n        this._lastCombat = combatId\r\n        this._lastCombatant = combatant?.id ?? ''\r\n        this._lastTurn = combat?.turn ?? -1\r\n\r\n        return super.render(force, options)\r\n    }\r\n\r\n    async close(options?: ({ force?: boolean | undefined } & Record<string, unknown>) | undefined): Promise<void> {\r\n        const result = await super.close(options)\r\n        this._hooks.forEach(x => Hooks.off('any', x))\r\n        return result\r\n    }\r\n\r\n    activateListeners(html: JQuery) {\r\n        const combat = ui.combat.viewed\r\n        if (!combat || !this.innerElement.length) return\r\n\r\n        const tracker = ui.combat\r\n\r\n        html.find('.draggable').on('mousedown', this.#onDragStart.bind(this))\r\n        html.find('.__resizer').on('mousedown', this.#onResizeStart.bind(this))\r\n\r\n        const list = html.find('.__inner > ol')\r\n        list.on('mouseenter', this.#onListHover.bind(this))\r\n        html.on('mouseleave', this.#onListOut.bind(this))\r\n\r\n        html.find('[data-control=trackerReverse]').on('click', () => (this.isReversed = !this.isReversed))\r\n        html.find('[data-control=trackerExpand]').on('click', () => (this.isExpanded = !this.isExpanded))\r\n\r\n        html.find('[data-control=targetCombatant]').on('click', this.#onTarget.bind(this))\r\n\r\n        html.find('.combat-control').on('click', tracker._onCombatControl.bind(tracker))\r\n        html.find('.combatant-control').on('click', tracker._onCombatantControl.bind(tracker))\r\n\r\n        const combatants = list.find('.combatant')\r\n        combatants.on('mouseenter', tracker._onCombatantHoverIn.bind(tracker))\r\n        combatants.on('mouseleave', tracker._onCombatantHoverOut.bind(tracker))\r\n\r\n        if (!game.user.isGM) return\r\n\r\n        this._contextMenu(html)\r\n        this.#makeSortable()\r\n\r\n        html.find('[data-control=trackerSettings]').on('click', () => new CombatTrackerConfig().render(true))\r\n\r\n        if (!hasMTB()) {\r\n            html.find('[data-control=\"toggleImmobilized\"]').on('click', this.#onToggleImmobilized.bind(this))\r\n        }\r\n\r\n        if (canNamesBeHidden() && thirdPartyToggleSeeName) {\r\n            html.find('[data-control=toggle-name-visibility]').on('click', this.#togglePlayersCanSeeName.bind(this))\r\n        }\r\n\r\n        combatants.on('click', tracker._onCombatantMouseDown.bind(tracker))\r\n    }\r\n\r\n    setPosition({ left, top, bottom }: ApplicationPosition) {\r\n        const el = this.element[0]!\r\n        const currentPosition = this.position\r\n        const minHeight = this.minHeight\r\n\r\n        const height = el.offsetHeight\r\n        const width = el.offsetWidth\r\n        const winHeight = window.innerHeight\r\n        const winWidth = window.innerWidth\r\n\r\n        left = left ?? winWidth / 2 - width / 2\r\n        top = top ?? winHeight / 2 - height / 2\r\n        bottom = bottom ?? winHeight / 2 - height / 2\r\n\r\n        const maxLeft = Math.max(winWidth - width, 0)\r\n        currentPosition.left = Math.clamped(left, 0, maxLeft)\r\n        el.style.left = currentPosition.left + 'px'\r\n\r\n        if (this.isReversed) {\r\n            if (bottom + minHeight > winHeight) bottom = winHeight - minHeight\r\n            if (bottom < 0) bottom = 0\r\n            el.style.bottom = bottom + 'px'\r\n            currentPosition.bottom = bottom\r\n            currentPosition.top = winHeight - bottom - minHeight\r\n        } else {\r\n            if (top + minHeight > winHeight) top = winHeight - minHeight\r\n            if (top < 0) top = 0\r\n            el.style.top = top + 'px'\r\n            currentPosition.top = top\r\n            currentPosition.bottom = winHeight - top - minHeight\r\n        }\r\n\r\n        this.#calculateHeight()\r\n\r\n        return currentPosition\r\n    }\r\n\r\n    _contextMenu($html: JQuery) {\r\n        this._menu = ContextMenu.create(this, $html, '.combatant', ui.combat._getEntryContextOptions())!\r\n    }\r\n\r\n    #onPreCreateCombatant(combatant: Combatant, data: DocumentUpdateData<Combatant>, context: DocumentModificationContext) {\r\n        if (context.temporary || !getSetting('hide') || combatant.actor?.hasPlayerOwner) return\r\n        combatant.updateSource({ hidden: true })\r\n    }\r\n\r\n    #getCombatantFromEvent(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const $combatant = $(event.currentTarget).closest('.combatant')\r\n        const id = $combatant.attr('data-combatant-id')!\r\n        return ui.combat.viewed?.combatants.get(id)\r\n    }\r\n\r\n    #onTarget(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        event.preventDefault()\r\n\r\n        const combatant = this.#getCombatantFromEvent(event)\r\n        const token = combatant?.token\r\n\r\n        if (!token) return\r\n\r\n        const current = Array.from(game.user.targets).map(x => x.id)\r\n        const targets = event.shiftKey ? current : current.filter(x => x === token.id)\r\n        const index = targets.indexOf(token.id)\r\n\r\n        if (index !== -1) targets.splice(index, 1)\r\n        else targets.push(token.id)\r\n\r\n        game.user.updateTokenTargets(targets)\r\n    }\r\n\r\n    #onToggleImmobilized(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        event.preventDefault()\r\n        const combatant = this.#getCombatantFromEvent(event)\r\n        if (combatant) toggleFreed(combatant)\r\n    }\r\n\r\n    async #togglePlayersCanSeeName(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        event.preventDefault()\r\n        const combatant = this.#getCombatantFromEvent(event)\r\n        if (!combatant) return\r\n\r\n        if (event.shiftKey && combatant.actor && combatant.actor.isToken && game.combat?.scene) {\r\n            getSameCombatants(combatant).forEach(togglePlayersSeeName)\r\n        } else {\r\n            togglePlayersSeeName(combatant)\r\n        }\r\n    }\r\n\r\n    #makeSortable() {\r\n        if (!game.modules.get('_sortablejs')?.active) return\r\n        this._sortable = new Sortable(this.listElement[0]!, {\r\n            animation: 150,\r\n            draggable: '.combatant',\r\n            delay: 50,\r\n            onEnd: this.#onSortEnd.bind(this),\r\n        })\r\n    }\r\n\r\n    #onSortEnd(event: Sortable.SortableEvent) {\r\n        const id = event.item.dataset.combatantId\r\n        const combat = ui.combat.viewed\r\n        const oldIndex = /** @type {number} */ event.oldIndex\r\n        const newIndex = /** @type {number} */ event.newIndex\r\n\r\n        if (!combat || oldIndex === newIndex || !id) return\r\n\r\n        const turns = combat.turns\r\n        if (turns.length <= 1) return\r\n\r\n        const others = turns.filter(x => x.id !== id)\r\n        const prevCombatants = others.slice(0, newIndex)\r\n        const nextCombatants = others.slice(newIndex)\r\n\r\n        let prevInit = prevCombatants.reverse().find(x => x.initiative != null)?.initiative\r\n        let nextInit = nextCombatants.find(x => x.initiative != null)?.initiative\r\n\r\n        if (nextInit == null && prevInit == null) {\r\n            nextInit = 0\r\n            prevInit = 2\r\n        } else if (nextInit == null) {\r\n            nextInit = /** @type {number} */ prevInit! - 2\r\n        } else if (prevInit == null) {\r\n            prevInit = /** @type {number} */ nextInit + 2\r\n        }\r\n\r\n        // @ts-ignore\r\n        const newInit = (prevInit + nextInit) / 2\r\n        combat.setInitiative(id, newInit)\r\n    }\r\n\r\n    #onResizeStart(event: JQuery.MouseDownEvent) {\r\n        event.preventDefault()\r\n\r\n        window.addEventListener('mousemove', this._resizeHook)\r\n        window.addEventListener('mouseup', this._resizeEndHook)\r\n    }\r\n\r\n    #onResize(event: MouseEvent) {\r\n        event.preventDefault()\r\n\r\n        if (!this.moveTick) return\r\n\r\n        let maxHeight: number | undefined = event.clientY - (this.position.top ?? 0)\r\n        if (this.isReversed) maxHeight = -(maxHeight - this.minHeight)\r\n\r\n        maxHeight = Math.max(maxHeight, this.minHeight)\r\n\r\n        this.#calculateHeight(maxHeight)\r\n\r\n        const combatants = this.combatantElements.length\r\n        const expected = combatants * this.combatantHeight + this.boxHeight\r\n\r\n        if (maxHeight >= expected) maxHeight = undefined\r\n\r\n        this.maxHeight = maxHeight\r\n    }\r\n\r\n    #onResizeEnd(event: MouseEvent) {\r\n        event.preventDefault()\r\n\r\n        window.removeEventListener('mousemove', this._resizeHook)\r\n        window.removeEventListener('mouseup', this._resizeEndHook)\r\n    }\r\n\r\n    #onDragStart(event: JQuery.MouseDownEvent) {\r\n        event.preventDefault()\r\n\r\n        this.isDragging = true\r\n        this._initialPosition = duplicate(this.position)\r\n        this._initialPointer = { x: event.clientX, y: event.clientY }\r\n\r\n        window.addEventListener('mousemove', this._dragHook)\r\n        window.addEventListener('mouseup', this._dragEndHook)\r\n    }\r\n\r\n    #onDrag(event: MouseEvent) {\r\n        event.preventDefault()\r\n\r\n        if (!this.moveTick) return\r\n\r\n        const pos = this._initialPosition\r\n        const cursor = this._initialPointer\r\n        const left = (pos.left ?? 0) + (event.clientX - cursor.x)\r\n\r\n        if (this.isReversed) {\r\n            this.setPosition({\r\n                left,\r\n                bottom: (pos.bottom ?? 0) - (event.clientY - cursor.y),\r\n            })\r\n        } else {\r\n            this.setPosition({\r\n                left,\r\n                top: (pos.top ?? 0) + (event.clientY - cursor.y),\r\n            })\r\n        }\r\n\r\n        this._coordsDebounce()\r\n    }\r\n\r\n    #onDragEnd(event: MouseEvent) {\r\n        event.preventDefault()\r\n\r\n        this.isDragging = false\r\n        this.#calculateHeight()\r\n\r\n        window.removeEventListener('mousemove', this._dragHook)\r\n        window.removeEventListener('mouseup', this._dragEndHook)\r\n    }\r\n\r\n    #onTokenHover(token: Token, hovered: boolean) {\r\n        const combatant = token.combatant\r\n        if (!combatant) return\r\n        const combatants = this.combatantElements\r\n        combatants.removeClass('hovered')\r\n        if (hovered) combatants.filter(`[data-combatant-id=\"${combatant.id}\"]`).addClass('hovered')\r\n    }\r\n\r\n    #setExpanded() {\r\n        setSetting('expanded', !this.isExpanded ? 'false' : this.maxHeight || 'true')\r\n    }\r\n\r\n    #expandList() {\r\n        this.innerElement.addClass('expanded')\r\n        this.#calculateHeight()\r\n    }\r\n\r\n    #collapseList() {\r\n        if (this._listHoverHook) clearTimeout(this._listHoverHook)\r\n        this.innerElement.removeClass('expanded')\r\n        this._menu?.close({ animate: false })\r\n    }\r\n\r\n    #onListHover() {\r\n        if (this.isExpanded || !getSetting('hover')) return\r\n        const delay = getSetting<number>('delay')\r\n        if (delay) this._listHoverHook = setTimeout(() => this.#expandList(), delay)\r\n        else this.#expandList()\r\n    }\r\n\r\n    #onListOut() {\r\n        if (this.isExpanded) return\r\n        this.#collapseList()\r\n    }\r\n\r\n    #calculateHeight(tmpHeight?: number) {\r\n        const inner = this.innerElement\r\n        if (!inner.length) return\r\n\r\n        const winHeight = window.innerHeight\r\n\r\n        let maxHeight\r\n\r\n        if (this.isReversed) maxHeight = winHeight - (this.position.bottom ?? 0)\r\n        else maxHeight = winHeight - (this.position.top ?? 0)\r\n\r\n        if (tmpHeight && tmpHeight < maxHeight) {\r\n            maxHeight = tmpHeight\r\n        } else if (this.maxHeight && this.maxHeight < maxHeight) {\r\n            maxHeight = this.maxHeight\r\n        }\r\n\r\n        maxHeight = Math.max(maxHeight, this.minHeight)\r\n        maxHeight -= this.innerMargins\r\n\r\n        inner.css('max-height', maxHeight)\r\n\r\n        if (this.isExpanded) this.#scrollToCurrent()\r\n    }\r\n\r\n    #scrollToCurrent() {\r\n        const list = this.listElement\r\n        const height = list.innerHeight()!\r\n        if (height === list.prop('scrollHeight')) return\r\n        const active = list.find('> .active')[0]!\r\n        list.scrollTop(active.offsetTop - height / 2 + active.offsetHeight / 2)\r\n    }\r\n\r\n    #setCoords() {\r\n        const { left, top, bottom } = this.position\r\n        setSetting('coords', { left, top, bottom })\r\n    }\r\n}\r\n","export function easeInQuad(x: number): number {\r\n    return x * x\r\n}\r\n\r\nexport function easeInSine(x: number): number {\r\n    return 1 - Math.cos((x * Math.PI) / 2)\r\n}\r\n","export function getSameCombatants(combatant: Combatant) {\r\n    return combatant.combat.turns.filter(x => x.actorId === combatant.actorId)\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string>,\r\n    arg2?: boolean | Record<string, string>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { warn } from '@utils/foundry/notification'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { tracker } from './main'\r\n\r\nexport function preUpdateToken(token: TokenDocument, data: Partial<foundry.data.TokenSource>) {\r\n    if (!tracker || !('x' in data || 'y' in data)) return\r\n\r\n    const combatant = token.combatant\r\n    const combat = ui.combat.viewed\r\n    if (!combat || !combatant || combat.combatant === combatant || getFlag(combatant, 'freed')) return\r\n\r\n    delete data.x\r\n    delete data.y\r\n\r\n    warn('immobilized')\r\n}\r\n","import { MiniTracker } from '@apps/tracker'\r\nimport { thirdPartyInitialization } from '@utils/anonymous/third'\r\nimport { error } from '@utils/foundry/notification'\r\nimport { getSetting, registerSetting } from '@utils/foundry/settings'\r\nimport { setModuleID } from '@utils/module'\r\nimport { hasMTB } from './thirds/mtb'\r\nimport { preUpdateToken } from './token'\r\nimport { renderCombatTrackerConfig } from './tracker'\r\n\r\nexport const MODULE_ID = 'mini-tracker'\r\nsetModuleID(MODULE_ID)\r\n\r\nexport let tracker: MiniTracker | null = null\r\n\r\nHooks.once('init', () => {\r\n    // CLIENT SETTINGS\r\n\r\n    registerSetting({\r\n        name: 'enabled',\r\n        scope: 'client',\r\n        config: true,\r\n        type: Boolean,\r\n        default: true,\r\n        onChange: enabled => {\r\n            if (enabled) createTracker()\r\n            else closeTracker()\r\n        },\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'scale',\r\n        scope: 'client',\r\n        config: true,\r\n        type: Number,\r\n        default: 14,\r\n        range: {\r\n            min: 10,\r\n            max: 30,\r\n            step: 2,\r\n        },\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'hover',\r\n        scope: 'client',\r\n        config: true,\r\n        type: Boolean,\r\n        default: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'delay',\r\n        scope: 'client',\r\n        config: true,\r\n        type: Number,\r\n        default: 250,\r\n    })\r\n\r\n    // CLIENT HIDDEN SETTINGS\r\n\r\n    registerSetting({\r\n        name: 'reversed',\r\n        scope: 'client',\r\n        type: Boolean,\r\n        default: false,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'fake-reversed',\r\n        scope: 'client',\r\n        type: Boolean,\r\n        default: false,\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'coords',\r\n        scope: 'client',\r\n        type: Object,\r\n        default: {},\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'expanded',\r\n        scope: 'client',\r\n        type: String,\r\n        default: 'false',\r\n    })\r\n\r\n    // WORLD SETTINGS\r\n\r\n    registerSetting({\r\n        name: 'turn',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'showHp',\r\n        config: true,\r\n        type: String,\r\n        default: 'friendly',\r\n        choices: ['none', 'gm', 'friendly', 'all'],\r\n        onChange: hpHooks,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'hpValue',\r\n        config: true,\r\n        type: String,\r\n        default: 'attributes.hp.value',\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'hpMax',\r\n        config: true,\r\n        type: String,\r\n        default: 'attributes.hp.max',\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'dim',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'dead',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n        onChange: refreshTracker,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'hide',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'reveal',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'revealToken',\r\n        config: true,\r\n        type: Boolean,\r\n        default: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'immobilize',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n        onChange: immobilizeHooks,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'pan',\r\n        config: true,\r\n        type: Boolean,\r\n        default: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'select',\r\n        config: true,\r\n        type: Boolean,\r\n        default: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'sheet',\r\n        config: true,\r\n        type: Boolean,\r\n        default: false,\r\n    })\r\n\r\n    thirdPartyInitialization()\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    if (game.user.isGM) checkForSortable()\r\n\r\n    setTimeout(() => {\r\n        if (getSetting('enabled')) createTracker()\r\n        if (getSetting('immobilize')) immobilizeHooks(true)\r\n        if (getSetting('hpValue')) hpHooks(true)\r\n    }, 1000)\r\n})\r\n\r\nHooks.on('renderCombatTrackerConfig', renderCombatTrackerConfig)\r\n\r\nfunction hpHooks(show: unknown) {\r\n    const method = show ? 'on' : 'off'\r\n    Hooks[method]('updateActor', updateActor)\r\n    refreshTracker()\r\n}\r\n\r\nfunction updateActor(actor: Actor, data: DocumentUpdateData) {\r\n    const hpValue = getSetting<string>('hpValue')\r\n    const hpMax = getSetting<string>('hpMax')\r\n    if (hpValue !== undefined && hasProperty(data, `system.${hpValue}`)) return refreshTracker()\r\n    if (hpMax !== undefined && hasProperty(data, `system.${hpMax}`)) return refreshTracker()\r\n}\r\n\r\nfunction immobilizeHooks(immobilize: unknown) {\r\n    if (hasMTB()) return\r\n    if (!game.user.isGM) {\r\n        const method = immobilize ? 'on' : 'off'\r\n        Hooks.on('preUpdateToken', preUpdateToken)\r\n    } else {\r\n        refreshTracker()\r\n    }\r\n}\r\n\r\nfunction checkForSortable() {\r\n    if (game.modules.get('_sortablejs')?.active) return\r\n    error('sortable', true)\r\n}\r\n\r\nfunction refreshTracker() {\r\n    tracker?.render()\r\n}\r\n\r\nfunction createTracker() {\r\n    if (tracker) return\r\n    tracker = new MiniTracker()\r\n    tracker.render(true)\r\n}\r\n\r\nfunction closeTracker() {\r\n    if (tracker) tracker.close()\r\n    tracker = null\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\nimport { getSetting, setSetting } from '@utils/foundry/settings'\r\n\r\nexport function renderCombatTrackerConfig(config: CombatTrackerConfig, html: JQuery) {\r\n    injectHTML(html)\r\n    addEvents(html)\r\n    html.css('height', 'auto')\r\n}\r\n\r\nfunction addEvents(html: JQuery) {\r\n    html.find<HTMLInputElement>('input[name=\"hideDeads\"]').on('change', function () {\r\n        const checked = $(this).is(':checked')\r\n        setSetting('dead', checked)\r\n    })\r\n}\r\n\r\nfunction injectHTML(html: JQuery) {\r\n    const checked = getSetting('dead') ? 'checked' : ''\r\n\r\n    let content = '<div class=\"form-group\">'\r\n    content += `<label>${localize('settings.dead.name')}</label>`\r\n    content += `<input type=\"checkbox\" name=\"hideDeads\" ${checked}>`\r\n    content += `<p class=\"notes\">${localize('settings.dead.hint')}</p>`\r\n    content += '</div>'\r\n\r\n    html.find('.form-group').last().after(content)\r\n}\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","path","join","templatePath","filter","x","getSetting","game","settings","setSetting","value","set","registerSetting","options","name","scope","config","hint","Array","isArray","choices","reduce","choice","register","getModule","id","modules","hasMTB","active","tokenSetsNameVisibility","system","has","thirdPartyCanNamesBeHidden","thirdPartyPlayersSeeName","thirdPartyToggleSeeName","thirdPartyGetName","localize","args","data","i18n","format","getFlag","doc","fallback","canNamesBeHidden","playersSeeName","combatant","actor","hasPlayerOwner","togglePlayersSeeName","getName","MiniTracker","Application","_isExpanded","_maxHeight","_dragging","_lastCombat","_lastCombatant","_lastMoveTime","_initialPosition","_initialPointer","y","_combatantHeight","_boxHeight","_innerMargins","_isReversed","_dragHook","_dragEndHook","_expandedDebounce","_coordsDebounce","_menu","_listHoverHook","_resizeHook","_resizeEndHook","_sortable","_hooks","_lastTurn","constructor","super","left","bottom","top","this","position","expanded","parseInt","undefined","bind","Hooks","on","debounce","defaultOptions","popOut","minimizable","template","isReversed","render","isExpanded","isDragging","element","toggleClass","moveTick","now","Date","innerElement","find","combatantElements","listElement","combatantHeight","outerHeight","boxHeight","height","listHeight","innerHeight","innerMargins","inner","css","minHeight","maxHeight","async","combat","ui","viewed","turns","some","isOwner","hasCombat","isGM","user","currentCombatant","showHp","hpValuePath","hpMaxPath","endTurn","reversed","hideNames","immobilize","sceneId","canvas","scene","canPing","hasPermission","hideDefeated","skipDefeated","dim","hasActive","hasDecimals","i","entries","visible","defeated","isDefeated","effects","Map","effect","temporaryEffects","CONFIG","specialStatusEffects","DEFEATED","icon","label","hpValue","getProperty","hpMax","hpHue","initiative","hasRolled","Number","isInteger","turn","playersCanSeeName","hidden","push","img","_getCombatantThumbnail","freed","canImmobilize","from","values","owner","targeted","token","object","toObject","map","color","Math","min","length","split","innerCss","precision","Combat","decimals","forEach","toFixed","round","arrow","isCurrentTurn","fontSize","force","list","_render","each","li","$","attr","clone","before","combatId","reveal","revealToken","diffCombatant","diffTurn","animatePan","control","releaseOthers","sheet","flag","flagsUpdatePath","updates","combatants","updated","update","_id","updateEmbeddedDocuments","result","close","off","activateListeners","html","tracker","_onCombatControl","_onCombatantControl","_onCombatantHoverIn","_onCombatantHoverOut","_contextMenu","CombatTrackerConfig","_onCombatantMouseDown","setPosition","el","currentPosition","offsetHeight","width","offsetWidth","winHeight","window","winWidth","innerWidth","maxLeft","max","clamped","style","$html","ContextMenu","create","_getEntryContextOptions","context","temporary","updateSource","event","currentTarget","closest","preventDefault","current","targets","shiftKey","index","indexOf","splice","updateTokenTargets","setFlag","toggleFreed","isToken","actorId","getSameCombatants","Sortable","animation","draggable","delay","onEnd","item","dataset","combatantId","oldIndex","newIndex","others","prevCombatants","slice","nextCombatants","prevInit","reverse","nextInit","newInit","setInitiative","addEventListener","clientY","removeEventListener","duplicate","clientX","pos","cursor","hovered","removeClass","addClass","clearTimeout","animate","setTimeout","tmpHeight","scrollTop","offsetTop","notify","str","arg1","arg2","arg3","type","permanent","notifications","preUpdateToken","hpHooks","show","updateActor","refreshTracker","hasProperty","immobilizeHooks","createTracker","once","Boolean","default","onChange","enabled","range","step","String","anonymous","api","toggleSeeName","thirdPartyInitialization","checked","content","last","after","injectHTML","is","addEvents"],"sourceRoot":""}